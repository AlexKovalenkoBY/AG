// explane global objects:
//Context
//ArisData
//Dialogs
var g_Nloc = Context.getSelectedLanguage();


main(); //вызов главной функции скрипта

function main () {

   var output_object = Context.createOutputObject(); //создали объект вывода
   
  var selected_obj = ArisData.getSelectedObjOccs(); //взяли объект из контекста (должны взять по крайней мере)
  //запускаю скрипт на объекте "Закупки МБП"
  var assigned_model= null; 
         var current_func = null;
         var automated_func_array = null;
         var total_func= 0;
         var total_automated =0;
  for(var i=0; i<selected_obj.length; i++ )
 {
     var curr_obj=selected_obj[i];
  // вывели название сценария в отчет "Закупки МБП"
    output_object.OutputLn(curr_obj.ObjDef().Name(Context.getSelectedLanguage()),"Arial",16,Constants.C_BLACK,Constants.C_WHITE,Constants.FMT_CENTER | Constants.FMT_ITALIC | Constants.FMT_BOLD,0);
   
     output_object.BeginTable(100,Constants.C_BLACK,Constants.C_WHITE,Constants.FMT_LEFT | Constants.FMT_ITALIC,0);
       //each row must begin with TableRow()
        output_object.TableRow();
        output_object.TableCell("№ п/п",10,"Arial",10,Constants.C_BLACK,Constants.C_BLUE_GREY,0,Constants.FMT_CENTER|Constants.FMT_BOLD,0);
        output_object.TableCell("Процесс",25,"Arial",10,Constants.C_BLACK,Constants.C_BLUE_GREY,0,Constants.FMT_CENTER|Constants.FMT_BOLD,0);
        output_object.TableCell("Количество функций",20,"Arial",10,Constants.C_BLACK,Constants.C_BLUE_GREY,0,Constants.FMT_CENTER|Constants.FMT_BOLD,0);
        output_object.TableCell("Количество автоматизированных функций",15,"Arial",10,Constants.C_BLACK,Constants.C_BLUE_GREY,0,Constants.FMT_CENTER|Constants.FMT_BOLD,0);
        output_object.TableCell("Уровень автоматизации, %%",20,"Arial",10,Constants.C_BLACK,Constants.C_BLUE_GREY,0,Constants.FMT_CENTER|Constants.FMT_BOLD,0);
//        
         
//        далее необходимо взять все исходящие связи от этого объекта. по идее это представления объектов типа функция, связанная с объектом "Закупки МБП" исх связями (тип2)
         var roles = curr_obj.getConnectedObjOccs([Constants.ST_PRCS_1],Constants.EDGES_OUT);
         
        
         for (j=0;j< roles.length; j++)
         {
           current_func = roles[j];
           output_object.TableRow();
           output_object.TableCell(""+(j+1),10,"Arial",10,Constants.C_BLACK,Constants.C_WHITE,0,Constants.FMT_CENTER|Constants.FMT_BOLD,0);
           output_object.TableCell(current_func.ObjDef().Name(Context.getSelectedLanguage()),25,"Arial",10,Constants.C_BLACK,Constants.C_WHITE,0,Constants.FMT_LEFT|Constants.FMT_BOLD,0);
           
           //далее необходимо взять каждый  roles[j] и для него пересчитать кол-во автоматизированных и неавтоматизированный функций
            assigned_model = current_func.ObjDef().AssignedModels(13);

            var func_list;// = null;
            if (assigned_model.length>0) 
                {
                    func_list = assigned_model[0].ObjOccListFilter(Constants.OT_FUNC).filter(function (func){ return func.SymbolNum()!=94}); //получили массив функций на модели детализации
                    // javascript. filter metod надо глянуть 
                    //далее необходимо подсчитать кол-во автоматизированных функций
                    //кол-во функций всего = ofuncobjocc.length
                    for (i=0; i<func_list.length;i++)
                        //если ф-ия связана с [Constants.OT_APPL_SYS_TYPE, Constants.OT_MOD_TYPE], то ее считаем как автоматизированную, иначе она неавтоматизированная
                       //getConnectedObjOccs ( int[] aSymbolTypes, int direction )
                        automated_func_array = func_list[i].getConnectedObjOccs( [Constants.ST_APPL_SYS_TYPE, Constants.ST_MOD_TYPE] , Constants.EDGES_INOUT );

                 }
                else { //кол-во функций =0 
                    automated_func = 0;
                    func_list=null;
                      }           
                      
                       output_object.TableCell(func_list.length,20,"Arial",10,Constants.C_BLACK,Constants.C_WHITE,0,Constants.FMT_CENTER|Constants.FMT_BOLD,0);
                        output_object.TableCell(automated_func_array.length ,15,"Arial",10,Constants.C_BLACK,Constants.C_WHITE,0,Constants.FMT_CENTER|Constants.FMT_BOLD,0);
                        output_object.TableCell(""+automated_func_array.length/func_list.length*100+" %" ,20,"Arial",10,Constants.C_BLACK,Constants.C_WHITE,0,Constants.FMT_CENTER|Constants.FMT_BOLD,0);
                       total_automated=total_automated+ automated_func_array.length;
                       total_func=total_func+func_list.length;
                
         }
                       //вывод итогововй строки
                       output_object.TableRow();
                       output_object.TableCell("Общее количество по процессам",35,"Arial",10,Constants.C_BLACK,Constants.C_BLUE_GREY,0,Constants.FMT_LEFT|Constants.FMT_BOLD,0);
                       output_object.TableCell(total_func,20,"Arial",10,Constants.C_BLACK,Constants.C_WHITE,0,Constants.FMT_CENTER|Constants.FMT_BOLD,0);
                       output_object.TableCell(total_automated,15,"Arial",10,Constants.C_BLACK,Constants.C_WHITE,0,Constants.FMT_CENTER|Constants.FMT_BOLD,0);
                       var total_percent = (total_automated/total_func)*100;
                       output_object.TableCell(""+total_percent.toFixed(2)+" %" ,20,"Arial",10,Constants.C_BLACK,Constants.C_WHITE,0,Constants.FMT_CENTER|Constants.FMT_BOLD,0);
                       output_object.EndTable("",100, "Arial",10,Constants.C_BLACK,Constants.C_WHITE,0,Constants.FMT_LEFT | Constants.FMT_ITALIC,0);
 }
 
   
 output_object.WriteReport();  
}